[{"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\index.js":"1","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\AddPlacePopup.js":"2","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\utils\\Api.js":"3","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\EditAvatarPopup.js":"4","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\Footer.js":"5","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\contexts\\CurrentUserContext.js":"6","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\ProtectedRoute.js":"7","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\Card.js":"8","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\ImagePopup.js":"9","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\App.js":"10","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\Register.js":"11","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\Login.js":"12","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\EditProfilePopup.js":"13","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\Main.js":"14","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\Header.js":"15","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\utils\\auth.js":"16","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\PopupWidthForm.js":"17"},{"size":511,"mtime":1612525833821,"results":"18","hashOfConfig":"19"},{"size":1237,"mtime":1612525833801,"results":"20","hashOfConfig":"19"},{"size":2360,"mtime":1612525833824,"results":"21","hashOfConfig":"19"},{"size":999,"mtime":1612525833803,"results":"22","hashOfConfig":"19"},{"size":207,"mtime":1612525833805,"results":"23","hashOfConfig":"19"},{"size":116,"mtime":1612525833808,"results":"24","hashOfConfig":"19"},{"size":0,"mtime":1612871530681,"results":"25","hashOfConfig":"19"},{"size":1671,"mtime":1612525833802,"results":"26","hashOfConfig":"19"},{"size":579,"mtime":1612525833806,"results":"27","hashOfConfig":"19"},{"size":5859,"mtime":1612990009030,"results":"28","hashOfConfig":"19"},{"size":1946,"mtime":1612988646307,"results":"29","hashOfConfig":"19"},{"size":1147,"mtime":1612990095017,"results":"30","hashOfConfig":"19"},{"size":1770,"mtime":1612525833804,"results":"31","hashOfConfig":"19"},{"size":2029,"mtime":1612525833806,"results":"32","hashOfConfig":"19"},{"size":243,"mtime":1612525833805,"results":"33","hashOfConfig":"19"},{"size":1264,"mtime":1612978063863,"results":"34","hashOfConfig":"19"},{"size":773,"mtime":1612525833807,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1ko2jtm",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\index.js",[],["75","76"],"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\AddPlacePopup.js",[],["77","78"],"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\utils\\Api.js",[],"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\EditAvatarPopup.js",[],"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\Footer.js",[],"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\contexts\\CurrentUserContext.js",[],"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\Card.js",[],"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\ImagePopup.js",[],"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\App.js",["79"],"import React from 'react';\nimport { Route, Switch, Redirect, useHistory, withRouter } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWidthForm from './PopupWidthForm';\nimport ImagePopup from './ImagePopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport api from '../utils/Api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nimport ProtectedRoute from './ProtectedRoute';\nimport Register from './Register';\nimport Login from './Login';\n\nimport * as auth from '../utils/auth';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setProfilePopupOpen] = React.useState(false)\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false)\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false)\n  const [selectedCard, setSelectedCard] = React.useState(false)\n  const [currentUser, setCurrentUser ] = React.useState({})\n  const [cards, setCards] = React.useState([])\n\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [userData, setUserData] = React.useState(null);\n  const history = useHistory();\n\n\n  function handleLogin() {\n    setLoggedIn(true);\n  }\n\n  function handleRegister() {\n\n  }\n\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n\n  React.useEffect(()=>{\n    api.getInitialCards()\n    .then((data)=>{\n        setCards(data)\n        })\n        .catch((err)=>{\n          console.log(err)\n        })\n  }, [])\n\n  React.useEffect(()=>{\n    api.getUserProfile()\n    .then((res)=>{\n      setCurrentUser(res)\n      })\n      .catch((err)=>{\n          console.log(err)\n      })\n  }, [])\n\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      auth.checkToken(jwt)\n        .then((res) => {\n          if (res) {\n            setUserData({\n              id: res.data._id,\n              email: res.data.email\n            });\n            setLoggedIn(true);\n            history.push('/');\n          }\n        })\n        .catch(err => {\n          console.log(err);\n          history.push('/sign-in');\n        });\n    }\n  }\n  \n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    if (!isLiked) { \n      api.likeCard(card._id)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err)=>{\n        console.log(err)\n        })\n      } else {\n          api.dislikeCard(card._id)\n          .then((newCard) => {  \n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n            setCards(newCards);\n          })\n          .catch((err)=>{\n              console.log(err)\n            })\n          }  \n  }\n\n  function handleCardDelete(card) {\n    const isOwn = card.owner._id === currentUser._id;\n    api.deleteCard(card._id, isOwn)\n    .then(() => {\n    // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.filter((c) =>  {\n      return (c._id !== card._id) });\n      // Обновляем стейт\n      setCards(newCards);\n    })\n    .catch((err)=>{\n      console.log(err)\n    })\n  }\n\n  function handleUpdateUser(data) {\n    api.setUserProfile(data)\n    .then((res)=>{\n      setCurrentUser(res)\n      closeAllPopups();\n      })\n      .catch((err)=>{\n        console.log(err)\n      })\n  }\n\n  function handleUpdateAvatar(data){\n    api.newAvatar(data)\n    .then((res) =>{\n      setCurrentUser(res)\n      closeAllPopups()\n    })\n    .catch((err)=>{\n      console.log(err)\n    })\n  }\n\n  function handleAddPlaceSubmit(data){\n    api.addNewCard(data)\n    .then((newCard) => {\n      setCards(\n        [newCard, ...cards]     \n      )\n      closeAllPopups()\n    })\n    .catch((err)=>{\n      console.log(err)\n    })\n  }\n\n  function handleEditProfileClick() {\n    setProfilePopupOpen(!isEditProfilePopupOpen)\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopupOpen(!isAddPlacePopupOpen)\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(!isEditAvatarPopupOpen)\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  } \n\n  function closeAllPopups() {\n    setProfilePopupOpen(false)\n    setAddPlacePopupOpen(false)\n    setEditAvatarPopupOpen(false)\n    setSelectedCard(false)\n  }\n\n  return (\n    <>\n    <CurrentUserContext.Provider value={currentUser}>\n      <Header userData={userData} loggedIn={loggedIn} />\n      <Switch>\n      <ProtectedRoute exact path=\"/\" loggedIn={loggedIn} component={Main} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} \n        onCardClick={handleCardClick} onCardLike={handleCardLike} onCardDelete={handleCardDelete} cards={cards} />\n       <Route path=\"/sign-up\">\n          <Register onRegister={handleRegister} />\n       </Route>\n\n       <Route path=\"/sign-in\">\n          <Login onLogin={handleLogin} />\n       </Route>\n            <Route>\n              {loggedIn ? <Redirect to=\"/\"/> : <Redirect to=\"/sign-in\"/>}\n            </Route>\n      </Switch>\n      <Footer/>\n      <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n      <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit}/> \n      <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateAvatar} /> \n      <PopupWidthForm name=\"popupWarning\" title=\"Вы уверены\" textBtn=\"Да\" />\n      <ImagePopup onClose={closeAllPopups} card={selectedCard} />\n\n    </CurrentUserContext.Provider>\n    </>\n  );\n}\n\nexport default withRouter(App);\n",["80","81"],"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\Register.js",["82","83","84","85"],"import React, {useState} from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nfunction Register({onRegister}) {\r\n    const [data, setData] = useState({\r\n      email: '',\r\n      password: '',\r\n    })\r\n  \r\n  const handleChange = (e) => {\r\n    const {name, value} = e.target;\r\n    {/*setData({\r\n      ...data,\r\n      [name]: value,\r\n    });*/}\r\n  }\r\n  /*const handleChangeCals = (e) => {\r\n    const {name, value} = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n  /*const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.password === this.state.confirmPassword){\r\n        let (password, email) = data;\r\n        \r\n      /*auth.register(this.state.username, this.state.password, this.state.email, this.state.calGoal).then((res) => {\r\n        if(res){\r\n          this.props.history.push('/login');\r\n        } else {\r\n          console.log('Произошла ошибка.');\r\n        }\r\n      });*/\r\n   // }\r\n  //}\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!data.email || !data.password) {\r\n      return;\r\n    }\r\n    onRegister(data.email, data.password)\r\n  }\r\n \r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"register\">\r\n          <h2 className=\"register__header\">Регистрация</h2>\r\n          \r\n          <input id=\"email\" placeholder=\"Email\" name=\"email\" type=\"email\" value={data.email} onChange={handleChange} />\r\n          \r\n          <input id=\"password\" placeholder=\"Пароль\" name=\"password\" type=\"password\" value={data.password} onChange={handleChange} />\r\n          \r\n         \r\n            <button type=\"submit\" onSubmit={handleSubmit} className=\"register__button\">Зарегистрироваться</button>\r\n          \r\n          <Link to=\"/sign-in\" className=\"register__login-link\">Уже зарегистрированы? Войти</Link>\r\n        </form>\r\n         \r\n  );\r\n  \r\n\r\n}\r\n\r\nexport default withRouter(Register);","C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\Login.js",[],"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\EditProfilePopup.js",["86","87","88"],"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\Main.js",[],"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\Header.js",[],"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\utils\\auth.js",[],"C:\\Users\\Андрей\\dev\\react-mesto-auth\\src\\components\\PopupWidthForm.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":44,"column":6,"nodeType":"97","endLine":44,"endColumn":8,"suggestions":"98"},{"ruleId":"89","replacedBy":"99"},{"ruleId":"91","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":5,"column":18,"nodeType":"103","messageId":"104","endLine":5,"endColumn":25},{"ruleId":"101","severity":1,"message":"105","line":11,"column":12,"nodeType":"103","messageId":"104","endLine":11,"endColumn":16},{"ruleId":"101","severity":1,"message":"106","line":11,"column":18,"nodeType":"103","messageId":"104","endLine":11,"endColumn":23},{"ruleId":"107","severity":1,"message":"108","line":12,"column":5,"nodeType":"109","messageId":"110","endLine":15,"endColumn":11},{"ruleId":"95","severity":1,"message":"111","line":23,"column":8,"nodeType":"97","endLine":23,"endColumn":22,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":36,"column":205,"nodeType":"115","endLine":36,"endColumn":216},{"ruleId":"113","severity":1,"message":"114","line":38,"column":235,"nodeType":"115","endLine":38,"endColumn":246},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],["116"],["117"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["118"],["116"],["117"],"no-unused-vars","'setData' is assigned a value but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","'value' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook React.useEffect has missing dependencies: 'currentUser.about' and 'currentUser.name'. Either include them or remove the dependency array.",["119"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [tokenCheck]",{"range":"124","text":"125"},"Update the dependencies array to be: [currentUser.about, currentUser.name, props.isOpen]",{"range":"126","text":"127"},[1392,1394],"[tokenCheck]",[657,671],"[currentUser.about, currentUser.name, props.isOpen]"]